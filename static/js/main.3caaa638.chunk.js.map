{"version":3,"sources":["component/ToDoContainer.js","component/ToDoInput.js","component/ToDoItem.js","component/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoContainer","children","className","ToDoInput","onInsert","useState","text","setText","onSubmit","useCallback","e","preventDefault","placeholder","value","onChange","target","type","size","ToDoItem","todo","onRemove","onToggle","onClick","id","checked","color","ToDoList","list","map","App","setList","nextId","useRef","newToDo","current","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAYeA,G,KATO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,sBAAKC,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAAf,wBACA,sBAAKA,UAAU,oBAAf,cAAqCD,U,OC4B5BE,EA/BG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAM5BC,EAAWC,uBACf,SAACC,GACCN,EAASE,GACTC,EAAQ,IACRG,EAAEC,mBAEJ,CAACP,EAAUE,IAGb,OACE,8BACE,uBAAMJ,UAAU,YAAYM,SAAUA,EAAtC,UACE,uBACEI,YAAY,kHACZC,MAAOP,EACPQ,SAnBS,SAACJ,GAChBH,EAAQG,EAAEK,OAAOF,UAoBb,wBAAQG,KAAK,SAAb,SACE,cAAC,IAAD,CAAOC,KAAK,aCFPC,EAlBE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClC,OACE,sBAAKnB,UAAU,WAAf,UACE,sBAAKA,UAAU,YAAYoB,QAAS,kBAAMD,EAASF,EAAKI,KAAxD,UACGJ,EAAKK,QACJ,cAAC,IAAD,CAAYP,KAAK,KAAKQ,MAAM,kBAE5B,cAAC,IAAD,CAAwBR,KAAK,OAE/B,qBAAKf,UAAU,YAAf,SAA4BiB,EAAKb,UAEnC,qBAAKJ,UAAU,SAASoB,QAAS,kBAAMF,EAASD,EAAKI,KAArD,SACE,cAAC,IAAD,CAAiBN,KAAK,KAAKQ,MAAM,eCD1BC,EAfE,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMP,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClC,OACE,qBAAKnB,UAAU,WAAf,SACGyB,EAAKC,KAAI,SAACT,GAAD,OACR,cAAC,EAAD,CACEA,KAAMA,EAENC,SAAUA,EACVC,SAAUA,GAFLF,EAAKI,UCoCLM,EAzCH,WAAO,IAAD,EACQxB,mBAAS,CAC/B,CAAEkB,GAAI,EAAGjB,KAAM,oFAAoBkB,SAAS,GAC5C,CAAED,GAAI,EAAGjB,KAAM,sDAAekB,SAAS,GACvC,CAAED,GAAI,EAAGjB,KAAM,iEAAgBkB,SAAS,GACxC,CAAED,GAAI,EAAGjB,KAAM,8BAAWkB,SAAS,GACnC,CAAED,GAAI,EAAGjB,KAAM,4CAAekB,SAAS,KANzB,mBACTG,EADS,KACHG,EADG,KASVC,EAASC,iBAAO,GAwBtB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAW5B,SAxBE,SAACE,GAChB,IAAM2B,EAAU,CACdV,GAAIQ,EAAOG,QACX5B,KAAMA,EACNkB,SAAS,GAEXM,EAAQH,EAAKQ,OAAOF,IACpBF,EAAOG,SAAW,KAkBhB,cAAC,EAAD,CAAUP,KAAMA,EAAMP,SAfT,SAACG,GAChBO,EAAQH,EAAKS,QAAO,SAACjB,GAAD,OAAUA,EAAKI,KAAOA,OAcEF,SAX7B,SAACE,GAChBO,EACEH,EAAKC,KAAI,SAACT,GAAD,OACPA,EAAKI,KAAOA,EAAZ,2BAAsBJ,GAAtB,IAA4BK,SAAUL,EAAKK,UAAYL,aCrBhDkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3caaa638.chunk.js","sourcesContent":["import React from 'react';\nimport './ToDo.css';\n\nconst ToDoContainer = ({ children }) => {\n  return (\n    <div className=\"ToDoContainer\">\n      <div className=\"container-title\">To Do List</div>\n      <div className=\"container-content\"> {children}</div>\n    </div>\n  );\n};\n\nexport default ToDoContainer;\n","import React, { useCallback, useState } from 'react';\nimport './ToDo.css';\nimport { MdAdd } from 'react-icons/md';\n\nconst ToDoInput = ({ onInsert }) => {\n  const [text, setText] = useState('');\n  const onChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const onSubmit = useCallback(\n    (e) => {\n      onInsert(text);\n      setText('');\n      e.preventDefault();\n    },\n    [onInsert, text],\n  );\n\n  return (\n    <div>\n      <form className=\"ToDoInput\" onSubmit={onSubmit}>\n        <input\n          placeholder=\" 할 일을 입력한 후, 버튼을 눌러 추가하세요.\"\n          value={text}\n          onChange={onChange}\n        ></input>\n        <button type=\"submit\">\n          <MdAdd size=\"\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ToDoInput;\n","import React from 'react';\nimport './ToDo.css';\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdDeleteForever,\n} from 'react-icons/md';\n\nconst ToDoItem = ({ todo, onRemove, onToggle }) => {\n  return (\n    <div className=\"ToDoItem\">\n      <div className=\"check-box\" onClick={() => onToggle(todo.id)}>\n        {todo.checked ? (\n          <MdCheckBox size=\"25\" color=\"darkslategray\" />\n        ) : (\n          <MdCheckBoxOutlineBlank size=\"25\" />\n        )}\n        <div className=\"item-text\">{todo.text}</div>\n      </div>\n      <div className=\"remove\" onClick={() => onRemove(todo.id)}>\n        <MdDeleteForever size=\"25\" color=\"grey\" />\n      </div>\n    </div>\n  );\n};\n\nexport default ToDoItem;\n","import React from 'react';\nimport './ToDo.css';\nimport ToDoItem from './ToDoItem';\n\nconst ToDoList = ({ list, onRemove, onToggle }) => {\n  return (\n    <div className=\"ToDoList\">\n      {list.map((todo) => (\n        <ToDoItem\n          todo={todo}\n          key={todo.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ToDoList;\n","import React, { useRef, useState } from 'react';\nimport ToDoContainer from './component/ToDoContainer';\nimport ToDoInput from './component/ToDoInput';\nimport ToDoList from './component/ToDoList';\n\nconst App = () => {\n  const [list, setList] = useState([\n    { id: 1, text: '리액트를 다루는 기술 공부하기', checked: true },\n    { id: 2, text: '알고리즘 3문제 풀기', checked: false },\n    { id: 3, text: '리팩터링 읽고 정리하기', checked: false },\n    { id: 4, text: '책읽기 30분', checked: true },\n    { id: 5, text: '물 1L 이상 마시기', checked: false },\n  ]);\n\n  const nextId = useRef(6);\n\n  const onInsert = (text) => {\n    const newToDo = {\n      id: nextId.current,\n      text: text,\n      checked: false,\n    };\n    setList(list.concat(newToDo));\n    nextId.current += 1;\n  };\n\n  const onRemove = (id) => {\n    setList(list.filter((todo) => todo.id !== id));\n  };\n\n  const onToggle = (id) => {\n    setList(\n      list.map((todo) =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n      ),\n    );\n  };\n\n  return (\n    <ToDoContainer>\n      <ToDoInput onInsert={onInsert} />\n      <ToDoList list={list} onRemove={onRemove} onToggle={onToggle} />\n    </ToDoContainer>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}